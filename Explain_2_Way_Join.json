[
    [
        {
            "Plan": {
                "Node Type": "Hash Join",
                "Parallel Aware": false,
                "Async Capable": false,
                "Join Type": "Inner",
                "Startup Cost": 12.38,
                "Total Cost": 24.53,
                "Plan Rows": 3,
                "Plan Width": 208,
                "Actual Startup Time": 0.035,
                "Actual Total Time": 0.038,
                "Actual Rows": 15,
                "Actual Loops": 1,
                "Output": [
                    "n.n_name",
                    "r.r_name"
                ],
                "Inner Unique": true,
                "Hash Cond": "(n.n_regionkey = r.r_regionkey)",
                "Shared Hit Blocks": 2,
                "Shared Read Blocks": 0,
                "Shared Dirtied Blocks": 0,
                "Shared Written Blocks": 0,
                "Local Hit Blocks": 0,
                "Local Read Blocks": 0,
                "Local Dirtied Blocks": 0,
                "Local Written Blocks": 0,
                "Temp Read Blocks": 0,
                "Temp Written Blocks": 0,
                "Plans": [
                    {
                        "Node Type": "Seq Scan",
                        "Parent Relationship": "Outer",
                        "Parallel Aware": false,
                        "Async Capable": false,
                        "Relation Name": "nation",
                        "Schema": "tpch1g",
                        "Alias": "n",
                        "Startup Cost": 0.0,
                        "Total Cost": 11.7,
                        "Plan Rows": 170,
                        "Plan Width": 108,
                        "Actual Startup Time": 0.009,
                        "Actual Total Time": 0.01,
                        "Actual Rows": 25,
                        "Actual Loops": 1,
                        "Output": [
                            "n.n_nationkey",
                            "n.n_name",
                            "n.n_regionkey",
                            "n.n_comment"
                        ],
                        "Shared Hit Blocks": 1,
                        "Shared Read Blocks": 0,
                        "Shared Dirtied Blocks": 0,
                        "Shared Written Blocks": 0,
                        "Local Hit Blocks": 0,
                        "Local Read Blocks": 0,
                        "Local Dirtied Blocks": 0,
                        "Local Written Blocks": 0,
                        "Temp Read Blocks": 0,
                        "Temp Written Blocks": 0,
                        "nodeId": 2,
                        "blocksSQL": " Select json_agg(row_to_json(blocktuple)) from ( select  tableName, aliasName, array_agg((blockid,tupleids)::TableBlockTuple) as blockaccessed from  (  select 'nation' as tableName, 'n' as aliasName , ( (n.ctid::text::point)[0]::int ) as blockid, count(distinct ((n.ctid::text::point)[1]::int )) as tupleids from tpch1g.nation n group by 3   order by 3, 4 asc ) group by tableName, aliasName ) blocktuple",
                        "tupleSQL": " Select json_agg(row_to_json(blocktuple)) from (  select   distinct (( ?.ctid::text::point)[1]::int ) as tupleid, ?.* from tpch1g.nation n where  ( (?.ctid::text::point)[0]::int )  = ? order by 2 asc ) blocktuple",
                        "blocksAccessed": [
                            [
                                {
                                    "tablename": "nation",
                                    "aliasname": "n",
                                    "blockaccessed": [
                                        {
                                            "block": "0",
                                            "tuplecount": "25"
                                        }
                                    ]
                                }
                            ]
                        ]
                    },
                    {
                        "Node Type": "Hash",
                        "Parent Relationship": "Inner",
                        "Parallel Aware": false,
                        "Async Capable": false,
                        "Startup Cost": 12.34,
                        "Total Cost": 12.34,
                        "Plan Rows": 3,
                        "Plan Width": 108,
                        "Actual Startup Time": 0.018,
                        "Actual Total Time": 0.018,
                        "Actual Rows": 3,
                        "Actual Loops": 1,
                        "Output": [
                            "r.r_name",
                            "r.r_regionkey"
                        ],
                        "Hash Buckets": 1024,
                        "Original Hash Buckets": 1024,
                        "Hash Batches": 1,
                        "Original Hash Batches": 1,
                        "Peak Memory Usage": 9,
                        "Shared Hit Blocks": 1,
                        "Shared Read Blocks": 0,
                        "Shared Dirtied Blocks": 0,
                        "Shared Written Blocks": 0,
                        "Local Hit Blocks": 0,
                        "Local Read Blocks": 0,
                        "Local Dirtied Blocks": 0,
                        "Local Written Blocks": 0,
                        "Temp Read Blocks": 0,
                        "Temp Written Blocks": 0,
                        "Plans": [
                            {
                                "Node Type": "Seq Scan",
                                "Parent Relationship": "Outer",
                                "Parallel Aware": false,
                                "Async Capable": false,
                                "Relation Name": "region",
                                "Schema": "tpch1g",
                                "Alias": "r",
                                "Startup Cost": 0.0,
                                "Total Cost": 12.34,
                                "Plan Rows": 3,
                                "Plan Width": 108,
                                "Actual Startup Time": 0.013,
                                "Actual Total Time": 0.013,
                                "Actual Rows": 3,
                                "Actual Loops": 1,
                                "Output": [
                                    "r.r_name",
                                    "r.r_regionkey"
                                ],
                                "Filter": "(r.r_name = ANY ('{EUROPE,ASIA,\"MIDDLE EAST\"}'::bpchar[]))",
                                "Rows Removed by Filter": 2,
                                "Shared Hit Blocks": 1,
                                "Shared Read Blocks": 0,
                                "Shared Dirtied Blocks": 0,
                                "Shared Written Blocks": 0,
                                "Local Hit Blocks": 0,
                                "Local Read Blocks": 0,
                                "Local Dirtied Blocks": 0,
                                "Local Written Blocks": 0,
                                "Temp Read Blocks": 0,
                                "Temp Written Blocks": 0,
                                "nodeId": 4,
                                "blocksSQL": " Select json_agg(row_to_json(blocktuple)) from ( select  tableName, aliasName, array_agg((blockid,tupleids)::TableBlockTuple) as blockaccessed from  (  select 'region' as tableName, 'r' as aliasName , ( (r.ctid::text::point)[0]::int ) as blockid, count(distinct ((r.ctid::text::point)[1]::int )) as tupleids from tpch1g.region r where (r.r_name = ANY ('{EUROPE,ASIA,\"MIDDLE EAST\"}'::bpchar[])) group by 3   order by 3, 4 asc ) group by tableName, aliasName ) blocktuple",
                                "tupleSQL": " Select json_agg(row_to_json(blocktuple)) from (  select   distinct (( ?.ctid::text::point)[1]::int ) as tupleid, ?.* from tpch1g.region r where (r.r_name = ANY ('{EUROPE,ASIA,\"MIDDLE EAST\"}'::bpchar[])) and  ( (?.ctid::text::point)[0]::int )  = ? order by 2 asc ) blocktuple",
                                "blocksAccessed": [
                                    [
                                        {
                                            "tablename": "region",
                                            "aliasname": "r",
                                            "blockaccessed": [
                                                {
                                                    "block": "0",
                                                    "tuplecount": "3"
                                                }
                                            ]
                                        }
                                    ]
                                ]
                            }
                        ],
                        "nodeId": 3,
                        "blocksSQL": "",
                        "blocksAccessed": ""
                    }
                ],
                "nodeId": 1,
                "blocksSQL": " Select json_agg(row_to_json(blocktuple)) from ( select  tableName, aliasName, array_agg((blockid,tupleids)::TableBlockTuple) as blockaccessed from  (  select 'nation' as tableName, 'n' as aliasName , ( (n.ctid::text::point)[0]::int ) as blockid, count(distinct ((n.ctid::text::point)[1]::int )) as tupleids from tpch1g.nation n, tpch1g.region r where (r.r_name = ANY ('{EUROPE,ASIA,\"MIDDLE EAST\"}'::bpchar[])) and (n.n_regionkey = r.r_regionkey) group by 3   order by 3, 4 asc ) group by tableName, aliasName union select  tableName, aliasName, array_agg((blockid,tupleids)::TableBlockTuple) as blockaccessed from  (  select 'region' as tableName, 'r' as aliasName , ( (r.ctid::text::point)[0]::int ) as blockid, count(distinct ((r.ctid::text::point)[1]::int )) as tupleids from tpch1g.nation n, tpch1g.region r where (r.r_name = ANY ('{EUROPE,ASIA,\"MIDDLE EAST\"}'::bpchar[])) and (n.n_regionkey = r.r_regionkey) group by 3   order by 3, 4 asc ) group by tableName, aliasName ) blocktuple",
                "tupleSQL": " Select json_agg(row_to_json(blocktuple)) from (  select   distinct (( ?.ctid::text::point)[1]::int ) as tupleid, ?.* from tpch1g.nation n, tpch1g.region r where (r.r_name = ANY ('{EUROPE,ASIA,\"MIDDLE EAST\"}'::bpchar[])) and (n.n_regionkey = r.r_regionkey) and  ( (?.ctid::text::point)[0]::int )  = ? order by 2 asc ) blocktuple",
                "blocksAccessed": [
                    [
                        {
                            "tablename": "nation",
                            "aliasname": "n",
                            "blockaccessed": [
                                {
                                    "block": "0",
                                    "tuplecount": "15"
                                }
                            ]
                        },
                        {
                            "tablename": "region",
                            "aliasname": "r",
                            "blockaccessed": [
                                {
                                    "block": "0",
                                    "tuplecount": "3"
                                }
                            ]
                        }
                    ]
                ]
            },
            "Planning": {
                "Shared Hit Blocks": 223,
                "Shared Read Blocks": 0,
                "Shared Dirtied Blocks": 0,
                "Shared Written Blocks": 0,
                "Local Hit Blocks": 0,
                "Local Read Blocks": 0,
                "Local Dirtied Blocks": 0,
                "Local Written Blocks": 0,
                "Temp Read Blocks": 0,
                "Temp Written Blocks": 0
            },
            "Planning Time": 0.528,
            "Triggers": [],
            "Execution Time": 0.087
        }
    ]
]